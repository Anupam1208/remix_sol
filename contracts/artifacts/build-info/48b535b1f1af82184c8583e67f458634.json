{
	"id": "48b535b1f1af82184c8583e67f458634",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/03_hotel.sol": {
				"content": "pragma solidity ^0.6.0;\r\ncontract Hotel{\r\n    address payable public owner;\r\n    enum state {vacant,occupied}\r\n        state currstate;\r\n    constructor() public {\r\n        owner=msg.sender;\r\n        currstate=state.vacant;\r\n    }\r\n    modifier onlywhilevacant{\r\n        require(currstate==state.vacant,\"Currently occupied\");\r\n        _;\r\n    }\r\n    modifier costs(uint _amount)\r\n    {\r\n        require(msg.value>=_amount,\"Not Enough Ether\");\r\n        _;\r\n    }\r\n    receive() external  payable  onlywhilevacant costs(2 ether){ \r\n        // require(state==state.vacant,\"Currently occupied\");\r\n        // require(msg.value>=2,\"Not Enough Ether\")\r\n        owner.transfer(msg.value);\r\n        currstate=state.occupied;\r\n    }\r\n        \r\n\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/03_hotel.sol": {
				"Hotel": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/03_hotel.sol\":25:745  contract Hotel{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/03_hotel.sol\":141:230  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/03_hotel.sol\":141:230  constructor() public {\r... */\n  pop\n    /* \"contracts/03_hotel.sol\":179:189  msg.sender */\n  caller\n    /* \"contracts/03_hotel.sol\":173:178  owner */\n  0x00\n  dup1\n    /* \"contracts/03_hotel.sol\":173:189  owner=msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/03_hotel.sol\":210:222  state.vacant */\n  0x00\n    /* \"contracts/03_hotel.sol\":200:209  currstate */\n  dup1\n  0x14\n    /* \"contracts/03_hotel.sol\":200:222  currstate=state.vacant */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x01\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  invalid\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/03_hotel.sol\":25:745  contract Hotel{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/03_hotel.sol\":25:745  contract Hotel{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/03_hotel.sol\":290:302  state.vacant */\n      0x00\n        /* \"contracts/03_hotel.sol\":279:302  currstate==state.vacant */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_6\n      jumpi\n      invalid\n    tag_6:\n        /* \"contracts/03_hotel.sol\":279:288  currstate */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/03_hotel.sol\":279:302  currstate==state.vacant */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_7\n      jumpi\n      invalid\n    tag_7:\n      eq\n        /* \"contracts/03_hotel.sol\":271:324  require(currstate==state.vacant,\"Currently occupied\") */\n      tag_8\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43757272656e746c79206f636375706965640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_8:\n        /* \"contracts/03_hotel.sol\":518:525  2 ether */\n      0x1bc16d674ec80000\n        /* \"contracts/03_hotel.sol\":414:421  _amount */\n      dup1\n        /* \"contracts/03_hotel.sol\":403:412  msg.value */\n      callvalue\n        /* \"contracts/03_hotel.sol\":403:421  msg.value>=_amount */\n      lt\n      iszero\n        /* \"contracts/03_hotel.sol\":395:441  require(msg.value>=_amount,\"Not Enough Ether\") */\n      tag_10\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7420456e6f75676820457468657200000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_10:\n        /* \"contracts/03_hotel.sol\":654:659  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/03_hotel.sol\":654:668  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/03_hotel.sol\":654:679  owner.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/03_hotel.sol\":669:678  msg.value */\n      callvalue\n        /* \"contracts/03_hotel.sol\":654:679  owner.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"contracts/03_hotel.sol\":654:679  owner.transfer(msg.value) */\n      pop\n        /* \"contracts/03_hotel.sol\":700:714  state.occupied */\n      0x01\n        /* \"contracts/03_hotel.sol\":690:699  currstate */\n      0x00\n      0x14\n        /* \"contracts/03_hotel.sol\":690:714  currstate=state.occupied */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_14\n      jumpi\n      invalid\n    tag_14:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/03_hotel.sol\":335:336  _ */\n      pop\n        /* \"contracts/03_hotel.sol\":25:745  contract Hotel{\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/03_hotel.sol\":46:74  address payable public owner */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/03_hotel.sol\":46:74  address payable public owner */\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_17:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203591d26f6edfff0bc7dac189f84ae1055ee42e1551ac56c1010c53448f8f327e64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff0219169083600181111561006f57fe5b0217905550610287806100836000396000f3fe6080604052600436106100225760003560e01c80638da5cb5b146101d5576101d0565b366101d0576000600181111561003457fe5b600060149054906101000a900460ff16600181111561004f57fe5b146100c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f43757272656e746c79206f63637570696564000000000000000000000000000081525060200191505060405180910390fd5b671bc16d674ec8000080341015610141576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420456e6f7567682045746865720000000000000000000000000000000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156101a8573d6000803e3d6000fd5b506001600060146101000a81548160ff021916908360018111156101c857fe5b021790555050005b600080fd5b3480156101e157600080fd5b506101ea61022c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea26469706673582212203591d26f6edfff0bc7dac189f84ae1055ee42e1551ac56c1010c53448f8f327e64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6F JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x287 DUP1 PUSH2 0x83 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D5 JUMPI PUSH2 0x1D0 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1D0 JUMPI PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x34 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F JUMPI INVALID JUMPDEST EQ PUSH2 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43757272656E746C79206F636375706965640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x1BC16D674EC80000 DUP1 CALLVALUE LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420456E6F75676820457468657200000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP2 0xD2 PUSH16 0x6EDFFF0BC7DAC189F84AE1055EE42E15 MLOAD 0xAC JUMP 0xC1 ADD 0xC MSTORE8 DIFFICULTY DUP16 DUP16 ORIGIN PUSH31 0x64736F6C634300060000330000000000000000000000000000000000000000 ",
							"sourceMap": "25:720:0:-:0;;;141:89;8:9:-1;5:2;;;30:1;27;20:12;5:2;141:89:0;179:10;173:5;;:16;;;;;;;;;;;;;;;;;;210:12;200:9;;:22;;;;;;;;;;;;;;;;;;;;;;;;25:720;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c80638da5cb5b146101d5576101d0565b366101d0576000600181111561003457fe5b600060149054906101000a900460ff16600181111561004f57fe5b146100c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f43757272656e746c79206f63637570696564000000000000000000000000000081525060200191505060405180910390fd5b671bc16d674ec8000080341015610141576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420456e6f7567682045746865720000000000000000000000000000000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156101a8573d6000803e3d6000fd5b506001600060146101000a81548160ff021916908360018111156101c857fe5b021790555050005b600080fd5b3480156101e157600080fd5b506101ea61022c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea26469706673582212203591d26f6edfff0bc7dac189f84ae1055ee42e1551ac56c1010c53448f8f327e64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D5 JUMPI PUSH2 0x1D0 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1D0 JUMPI PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x34 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4F JUMPI INVALID JUMPDEST EQ PUSH2 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43757272656E746C79206F636375706965640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x1BC16D674EC80000 DUP1 CALLVALUE LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420456E6F75676820457468657200000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP2 0xD2 PUSH16 0x6EDFFF0BC7DAC189F84AE1055EE42E15 MLOAD 0xAC JUMP 0xC1 ADD 0xC MSTORE8 DIFFICULTY DUP16 DUP16 ORIGIN PUSH31 0x64736F6C634300060000330000000000000000000000000000000000000000 ",
							"sourceMap": "25:720:0:-:0;;;;;;;;;;;;;;;;;;;;;;;290:12;279:23;;;;;;;;:9;;;;;;;;;;;:23;;;;;;;;;271:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:7:::1;414;403:9;:18;;395:46;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;654:5:::2;::::0;::::2;;;;;;;;;:14;;:25;669:9;654:25;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;654:25:0;700:14;690:9;;:24;;;;;;;;;;;;;;;;;;;;;;;;335:1:::1;25:720:::0;;;;;46:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "129400",
								"executionCost": "41980",
								"totalCost": "171380"
							},
							"external": {
								"owner()": "1031"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 745,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 745,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 745,
									"name": "MSTORE"
								},
								{
									"begin": 141,
									"end": 230,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 141,
									"end": 230,
									"name": "POP"
								},
								{
									"begin": 179,
									"end": 189,
									"name": "CALLER"
								},
								{
									"begin": 173,
									"end": 178,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 173,
									"end": 178,
									"name": "DUP1"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "EXP"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "DUP2"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "SLOAD"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "DUP2"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "MUL"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "NOT"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "AND"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "SWAP1"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "DUP4"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "AND"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "MUL"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "OR"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "SWAP1"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "SSTORE"
								},
								{
									"begin": 173,
									"end": 189,
									"name": "POP"
								},
								{
									"begin": 210,
									"end": 222,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 200,
									"end": 209,
									"name": "DUP1"
								},
								{
									"begin": 200,
									"end": 209,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "EXP"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "DUP2"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "SLOAD"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "DUP2"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "MUL"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "NOT"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "AND"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "SWAP1"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "DUP4"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "DUP2"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "GT"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "ISZERO"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "JUMPI"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "INVALID"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "JUMPDEST"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "MUL"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "OR"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "SWAP1"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "SSTORE"
								},
								{
									"begin": 200,
									"end": 222,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 745,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 745,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 745,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 745,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 745,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 745,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 745,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203591d26f6edfff0bc7dac189f84ae1055ee42e1551ac56c1010c53448f8f327e64736f6c63430006000033",
									".code": [
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "SHR"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "JUMP"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "JUMPI"
										},
										{
											"begin": 290,
											"end": 302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "DUP2"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "GT"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "ISZERO"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "JUMPI"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "INVALID"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "JUMPDEST"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "SWAP1"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "SLOAD"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "SWAP1"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "EXP"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "SWAP1"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "DIV"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "AND"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "DUP2"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "GT"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "ISZERO"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "JUMPI"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "INVALID"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "JUMPDEST"
										},
										{
											"begin": 279,
											"end": 302,
											"name": "EQ"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "JUMPI"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP3"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH",
											"value": "43757272656E746C79206F636375706965640000000000000000000000000000"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP2"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "MSTORE"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "ADD"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "POP"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "MLOAD"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "DUP1"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "SWAP2"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "SUB"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "SWAP1"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "REVERT"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 271,
											"end": 324,
											"name": "JUMPDEST"
										},
										{
											"begin": 518,
											"end": 525,
											"name": "PUSH",
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 414,
											"end": 421,
											"name": "DUP1"
										},
										{
											"begin": 403,
											"end": 412,
											"name": "CALLVALUE"
										},
										{
											"begin": 403,
											"end": 421,
											"name": "LT"
										},
										{
											"begin": 403,
											"end": 421,
											"name": "ISZERO"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPI"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MLOAD"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP3"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SUB"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP3"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"value": "4E6F7420456E6F75676820457468657200000000000000000000000000000000"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MSTORE"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "MLOAD"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP2"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SUB"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "REVERT"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 395,
											"end": 441,
											"name": "JUMPDEST"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "DUP1"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "SWAP1"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "SLOAD"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "SWAP1"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "EXP"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "SWAP1"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "DIV"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 654,
											"end": 659,
											"name": "AND"
										},
										{
											"begin": 654,
											"end": 668,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 654,
											"end": 668,
											"name": "AND"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 669,
											"end": 678,
											"name": "CALLVALUE"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "SWAP1"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "DUP2"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "ISZERO"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "MUL"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "SWAP1"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "MLOAD"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "MLOAD"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "DUP1"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "DUP4"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "SUB"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "DUP2"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "DUP6"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "DUP9"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "DUP9"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "CALL"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "SWAP4"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 654,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 690,
											"end": 699,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "EXP"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "SLOAD"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "MUL"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "NOT"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "AND"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "SWAP1"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "DUP4"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "DUP2"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "GT"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "ISZERO"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "JUMPI"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "INVALID"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "JUMPDEST"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "MUL"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "OR"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "SWAP1"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "SSTORE"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "STOP"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 745,
											"name": "REVERT"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "MSTORE"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "MLOAD"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "SUB"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "RETURN"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "SLOAD"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "EXP"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "DIV"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 74,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/03_hotel.sol\":\"Hotel\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/03_hotel.sol\":{\"keccak256\":\"0x52e49ab832a4fea29425d40877da7783562d0a1951f5f36d806f3e2ca35e8452\",\"urls\":[\"bzz-raw://d95d61b5434f541e17005cd53c6ce7542ce217255e0bbc2ab00e7f10d1a5b324\",\"dweb:/ipfs/QmYh55U3mnmdJCnXJH1dkq7KjGaz1VqKXtHpCrRLhY8Dyo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/03_hotel.sol:Hotel",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 8,
								"contract": "contracts/03_hotel.sol:Hotel",
								"label": "currstate",
								"offset": 20,
								"slot": "0",
								"type": "t_enum(state)6"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_enum(state)6": {
								"encoding": "inplace",
								"label": "enum Hotel.state",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/03_hotel.sol": {
				"ast": {
					"absolutePath": "contracts/03_hotel.sol",
					"exportedSymbols": {
						"Hotel": [
							70
						]
					},
					"id": 71,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "Hotel",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 70,
									"src": "46:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "46:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "Hotel.state",
									"id": 6,
									"members": [
										{
											"id": 4,
											"name": "vacant",
											"nodeType": "EnumValue",
											"src": "93:6:0"
										},
										{
											"id": 5,
											"name": "occupied",
											"nodeType": "EnumValue",
											"src": "100:8:0"
										}
									],
									"name": "state",
									"nodeType": "EnumDefinition",
									"src": "81:28:0"
								},
								{
									"constant": false,
									"id": 8,
									"name": "currstate",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 70,
									"src": "119:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_state_$6",
										"typeString": "enum Hotel.state"
									},
									"typeName": {
										"contractScope": null,
										"id": 7,
										"name": "state",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 6,
										"src": "119:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_state_$6",
											"typeString": "enum Hotel.state"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "162:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 11,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "173:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 12,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "179:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "179:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "173:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "173:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 16,
														"name": "currstate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "200:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$6",
															"typeString": "enum Hotel.state"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 17,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$6_$",
																"typeString": "type(enum Hotel.state)"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "vacant",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "210:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$6",
															"typeString": "enum Hotel.state"
														}
													},
													"src": "200:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_state_$6",
														"typeString": "enum Hotel.state"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "200:22:0"
											}
										]
									},
									"documentation": null,
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "152:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "162:0:0"
									},
									"scope": 70,
									"src": "141:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "260:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_state_$6",
																"typeString": "enum Hotel.state"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 25,
																"name": "currstate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "279:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_state_$6",
																	"typeString": "enum Hotel.state"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 26,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "290:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_state_$6_$",
																		"typeString": "type(enum Hotel.state)"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "vacant",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "290:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_state_$6",
																	"typeString": "enum Hotel.state"
																}
															},
															"src": "279:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43757272656e746c79206f63637570696564",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "303:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20388466ca28eaceee30af453b4baaec158c873ee30be858cc264bda222f4bdd",
																"typeString": "literal_string \"Currently occupied\""
															},
															"value": "Currently occupied"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20388466ca28eaceee30af453b4baaec158c873ee30be858cc264bda222f4bdd",
																"typeString": "literal_string \"Currently occupied\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															88,
															89
														],
														"referencedDeclaration": 89,
														"src": "271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "271:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "271:53:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "335:1:0"
											}
										]
									},
									"documentation": null,
									"id": 34,
									"name": "onlywhilevacant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "260:0:0"
									},
									"src": "236:108:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "384:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 39,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "403:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "403:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "414:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "403:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420456e6f756768204574686572",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "422:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ea324e8b8c558052b533421a3f8af4450d8e4ace9d510c596cc4d9779946a8d",
																"typeString": "literal_string \"Not Enough Ether\""
															},
															"value": "Not Enough Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ea324e8b8c558052b533421a3f8af4450d8e4ace9d510c596cc4d9779946a8d",
																"typeString": "literal_string \"Not Enough Ether\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															88,
															89
														],
														"referencedDeclaration": 89,
														"src": "395:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "395:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "395:46:0"
											},
											{
												"id": 46,
												"nodeType": "PlaceholderStatement",
												"src": "452:1:0"
											}
										]
									},
									"documentation": null,
									"id": 48,
									"name": "costs",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 48,
												"src": "365:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "364:14:0"
									},
									"src": "350:111:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "526:196:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 59,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "669:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "669:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 56,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "654:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "654:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "654:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "currstate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "690:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$6",
															"typeString": "enum Hotel.state"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 64,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "700:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$6_$",
																"typeString": "type(enum Hotel.state)"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "occupied",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "700:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$6",
															"typeString": "enum Hotel.state"
														}
													},
													"src": "690:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_state_$6",
														"typeString": "enum Hotel.state"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "690:24:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"implemented": true,
									"kind": "receive",
									"modifiers": [
										{
											"arguments": null,
											"id": 51,
											"modifierName": {
												"argumentTypes": null,
												"id": 50,
												"name": "onlywhilevacant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 34,
												"src": "496:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "496:15:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "32",
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "518:7:0",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2000000000000000000_by_1",
														"typeString": "int_const 2000000000000000000"
													},
													"value": "2"
												}
											],
											"id": 54,
											"modifierName": {
												"argumentTypes": null,
												"id": 52,
												"name": "costs",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 48,
												"src": "512:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "512:14:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "526:0:0"
									},
									"scope": 70,
									"src": "467:255:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 71,
							"src": "25:720:0"
						}
					],
					"src": "0:745:0"
				},
				"id": 0
			}
		}
	}
}